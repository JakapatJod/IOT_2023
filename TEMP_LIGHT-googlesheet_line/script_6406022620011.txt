function doGet(e) {
  Logger.log(JSON.stringify(e));
  var token = 'eYwcW0uyXDTFlC2CMNCvFIwGx4lNfdRBRockaxjcSNh'; //line token
  var result = 'Ok';

  if (e.parameter == 'undefined') {
    result = 'No Parameters';
  } else {
    var sheet_id = '1ZA2KDsFqyU9ssHoI04BjDAjrSkn0zWlNUpzkLoQ8F3E'; // Spreadsheet ID
    var sheet = SpreadsheetApp.openById(sheet_id).getActiveSheet();
    var newRow = sheet.getLastRow() + 1;
    var rowData = [];
    var Curr_Date = new Date();
    rowData[0] = Curr_Date; // Date in column A
    var Curr_Time = Utilities.formatDate(Curr_Date, "Asia/Bangkok", 'HH:mm:ss');
    rowData[1] = Curr_Time; // Time in column B

    for (var param in e.parameter) {
      Logger.log('In for loop, param=' + param);
      var value = stripQuotes(e.parameter[param]);
      Logger.log(param + ':' + e.parameter[param]);
      switch (param) {
        case 'temp':
          rowData[2] = value; // Temperature in column C
          result = 'temp Written on column C';
          break;
        case 'humi':
          rowData[3] = value; // Temperature in column D
          result = 'humidity Written on column D';
          break;
        case 'light':
          rowData[4] = value; // Temperature in column E
          result = 'humidity Written on column E';
          break;
      }
    }

    Logger.log(JSON.stringify(rowData));
    
    var newRange = sheet.getRange(newRow, 1, 1, rowData.length);
    newRange.setValues([rowData]);

    var message = "\nบันทึกข้อมูล:\n" +
      "Date: " + rowData[0] + "\n" +
      "time: " + rowData[1] + "\n" +
      "temp: " + rowData[2] + "\n" +
      "humid: " + rowData[3] + "\n" +
      "light: " + rowData[4];
    
    // แจ้งเตือนใน Line ทุกๆ 1 Hr
    if (newRow % 60 == 0) { 
      sendLineNotify(message, token);
    }
  }

  return ContentService.createTextOutput(result);
}

function stripQuotes(value) {
  return value.replace(/^["']|['"]$/g, "");
}

function sendLineNotify(message, token) {
  var options = {
    "method": "post",
    "payload": {
      "message": message,
    },
    "headers": { "Authorization": "Bearer " + token }
  };
  UrlFetchApp.fetch("https://notify-api.line.me/api/notify", options);
}
